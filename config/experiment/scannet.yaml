# @package _global_

defaults:
  - /dataset@_group_.scannet: scannet
  - override /model/encoder: anysplat
  - override /model/encoder/backbone: croco
  - override /loss: [mse, lpips]

wandb:
  name: scannet-anysplat
  tags: [scannet, 256x256]

model:
  encoder:
    gs_params_head_type: dpt_gs
    pose_free: true
    intrinsics_embed_loc: encoder
    intrinsics_embed_type: token
    pretrained_weights: ''
    voxel_size: 0.002
    pred_pose: true
    anchor_feat_dim: 128
    gs_prune: false
    pred_head_type: depth
    freeze_backbone: false
    distill: true
    render_conf: false
    conf_threshold: 0.1
    freeze_module: patch_embed
    voxelize: true
    intermediate_layer_idx: [4, 11, 17, 23]
    num_scales: 2
    upsample_factor: 2
    lowest_feature_resolution: 4
    monodepth_vit_type: vitb

dataset:
  scannet:
    input_image_shape: [256, 256]
    roots: ["/tmp/scannet"]
    view_sampler:
      num_context_views: 6
      num_target_views: 2
      min_distance_between_context_views: 32
      max_distance_between_context_views: 128
      max_img_per_gpu: 6
    avg_pose: false
    intr_augment: false
    normalize_by_pts3d: false
    rescale_to_1cube: false
    near: 0.5
    far: 15.0

optimizer:
  lr: 1.5e-4
  warm_up_steps: 2000
  backbone_lr_multiplier: 0.1

data_loader:
  train:
    batch_size: 1

trainer:
  max_steps: 150000
  val_check_interval: 500
  num_nodes: 1
  accumulate_grad_batches: 1
  precision: bf16-mixed

checkpointing:
  load: null
  every_n_train_steps: 5000
  save_weights_only: false
  save_top_k: 5

train:
  pose_loss_alpha: 1.0
  pose_loss_delta: 1.0
  cxt_depth_weight: 0.0
  weight_pose: 10.0
  weight_depth: 0.0
  weight_normal: 0.0

hydra:
  run:
    dir: output/exp_${wandb.name}/${now:%Y-%m-%d_%H-%M-%S}

loss:
  mse:
    conf: false
  lpips:
    conf: false
    weight: 0.05

test:
  save_video: false
  save_depth_concat_img: false
  save_image: false
  save_gt_image: false
  save_input_images: false
  save_gaussian: false
  compute_scores: true